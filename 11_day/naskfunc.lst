     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ; NASMではエラーが出るのでコメントアウト
     5                                  ;[FORMAT "WCOFF"] ; オブジェクトファイルを作るモード
     6                                  [BITS 32] ; 32ビットモードの機械語を作らせる
     7                                  
     8                                  ; NASMではエラーが出るのでコメントアウト
     9                                  ;[FILE "naskfunc.nas]
    10                                  	GLOBAL _io_hlt, _io_cli, _io_sti, _io_stihlt
    11                                  	GLOBAL _io_in8, _io_in16, _io_in32
    12                                  	GLOBAL _io_out8, _io_out16, _io_out_32
    13                                  	GLOBAL _io_load_eflags, _io_store_eflags
    14                                  	GLOBAL _load_cr0, _store_cr0:
    15                                  	GLOBAL _load_gdtr, _load_idtr
    16                                  	GLOBAL	_asm_inthandler21, _asm_inthandler27, _asm_inthandler2c
    17                                  	EXTERN _inthandler21, _inthandler27, _inthandler2c
    18                                  
    19                                  ; 以下は実際の関数
    20                                  [SECTION .text] ; オブジェクトファイルではこれを書いてからプログラムを書く
    21                                  _io_hlt: ; void io_hlt(void);
    22 00000000 F4                      	HLT
    23 00000001 C3                      	RET
    24                                  
    25                                  _io_cli: ; void _io_cli(void);
    26 00000002 FA                      	CLI
    27 00000003 C3                      	RET
    28                                  
    29                                  _io_sti: ; void _io_sti(void);
    30 00000004 FB                      	STI
    31 00000005 C3                      	RET
    32                                  
    33                                  _io_stihlt: ; void _io_stihlt(void);
    34 00000006 FB                      	STI
    35 00000007 F4                      	HLT
    36 00000008 C3                      	RET
    37                                  
    38                                  _io_in8: ; int _io_in8(int port);
    39 00000009 8B542404                	MOV EDX,[ESP+4]
    40 0000000D B800000000              	MOV EAX,0
    41 00000012 EC                      	IN	AL,DX
    42 00000013 C3                      	RET
    43                                  
    44                                  _io_in16: ; int _io_in16(int port);
    45 00000014 8B542404                	MOV EDX,[ESP+4]
    46 00000018 B800000000              	MOV EAX,0
    47 0000001D 66ED                    	IN	AX,DX
    48 0000001F C3                      	RET
    49                                  
    50                                  _io_in32: ; int _io_in32(int port);
    51 00000020 8B542404                	MOV EDX,[ESP+4]
    52 00000024 B800000000              	MOV EAX,0
    53 00000029 ED                      	IN	EAX,DX
    54 0000002A C3                      	RET
    55                                  
    56                                  _io_out8: ; void _io_out8(int port, int data);
    57 0000002B 8B542404                	MOV EDX,[ESP+4]
    58 0000002F 8A442408                	MOV AL,[ESP+8]
    59 00000033 EE                      	OUT DX,AL
    60 00000034 C3                      	RET
    61                                  
    62                                  _io_out16: ; void _io_out16(int port, int data);
    63 00000035 8B542404                	MOV EDX,[ESP+4]
    64 00000039 8A442408                	MOV AL,[ESP+8]
    65 0000003D 66EF                    	OUT DX,AX
    66 0000003F C3                      	RET
    67                                  
    68                                  _io_out32: ; void _io_out32(int port, int data);
    69 00000040 8B542404                	MOV EDX,[ESP+4]
    70 00000044 8A442408                	MOV AL,[ESP+8]
    71 00000048 EF                      	OUT DX,EAX
    72 00000049 C3                      	RET
    73                                  
    74                                  _io_load_eflags: ; int _io_load_eflags(void);
    75 0000004A 9C                      	PUSHFD
    76 0000004B 58                      	POP EAX
    77 0000004C C3                      	RET
    78                                  
    79                                  _io_store_eflags: ; void _io_store_eflags(int eflags);
    80 0000004D 8B442404                	MOV EAX,[ESP+4]
    81 00000051 50                      	PUSH EAX
    82 00000052 9D                      	POPFD
    83 00000053 C3                      	RET
    84                                  
    85                                  _load_gdtr: ; void _load_gdtr(int limit, int addr);
    86 00000054 668B442404              	MOV	AX,[ESP+4]
    87 00000059 6689442406              	MOV	[ESP+6],AX
    88 0000005E 0F01542406              	LGDT [ESP+6]
    89 00000063 C3                      	RET
    90                                  
    91                                  _load_idtr: ; void _load_idtr(int limit, int addr);
    92 00000064 668B442404              	MOV AX,[ESP+4]
    93 00000069 6689442406              	MOV	[ESP+6],AX
    94 0000006E 0F015C2406              	LIDT [ESP+6]
    95 00000073 C3                      	RET
    96                                  
    97                                  _load_cr0: ; int _load_cr0(void);
    98 00000074 0F20C0                  	MOV EAX, CR0
    99 00000077 C3                      	RET
   100                                  
   101                                  _store_cr0: ; void _store_cr0(int cr0);
   102 00000078 8B442404                	MOV EAX,[ESP+4]
   103 0000007C 0F22C0                  	MOV	CR0, EAX
   104 0000007F C3                      	RET
   105                                  
   106                                  _asm_inthandler21:
   107 00000080 06                      		PUSH	ES
   108 00000081 1E                      		PUSH	DS
   109 00000082 60                      		PUSHAD
   110 00000083 89E0                    		MOV		EAX,ESP
   111 00000085 50                      		PUSH	EAX
   112 00000086 668CD0                  		MOV		AX,SS
   113 00000089 8ED8                    		MOV		DS,AX
   114 0000008B 8EC0                    		MOV		ES,AX
   115 0000008D E8(00000000)            		CALL	_inthandler21
   116 00000092 58                      		POP		EAX
   117 00000093 61                      		POPAD
   118 00000094 1F                      		POP		DS
   119 00000095 07                      		POP		ES
   120 00000096 CF                      		IRETD
   121                                  
   122                                  _asm_inthandler27:
   123 00000097 06                      		PUSH	ES
   124 00000098 1E                      		PUSH	DS
   125 00000099 60                      		PUSHAD
   126 0000009A 89E0                    		MOV		EAX,ESP
   127 0000009C 50                      		PUSH	EAX
   128 0000009D 668CD0                  		MOV		AX,SS
   129 000000A0 8ED8                    		MOV		DS,AX
   130 000000A2 8EC0                    		MOV		ES,AX
   131 000000A4 E8(00000000)            		CALL	_inthandler27
   132 000000A9 58                      		POP		EAX
   133 000000AA 61                      		POPAD
   134 000000AB 1F                      		POP		DS
   135 000000AC 07                      		POP		ES
   136 000000AD CF                      		IRETD
   137                                  
   138                                  _asm_inthandler2c:
   139 000000AE 06                      		PUSH	ES
   140 000000AF 1E                      		PUSH	DS
   141 000000B0 60                      		PUSHAD
   142 000000B1 89E0                    		MOV		EAX,ESP
   143 000000B3 50                      		PUSH	EAX
   144 000000B4 668CD0                  		MOV		AX,SS
   145 000000B7 8ED8                    		MOV		DS,AX
   146 000000B9 8EC0                    		MOV		ES,AX
   147 000000BB E8(00000000)            		CALL	_inthandler2c
   148 000000C0 58                      		POP		EAX
   149 000000C1 61                      		POPAD
   150 000000C2 1F                      		POP		DS
   151 000000C3 07                      		POP		ES
   152 000000C4 CF                      		IRETD
